"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[3255],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),m=c(n),d=i,f=m["".concat(p,".").concat(d)]||m[d]||s[d]||o;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=m;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5699:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return s}});var r=n(3117),i=n(102),o=(n(7294),n(3905)),l=["components"],a={title:"<FilePicker />"},p=void 0,c={unversionedId:"form/upload/file-picker",id:"form/upload/file-picker",title:"<FilePicker />",description:"The raw file picker which automatically resets the value of the input, allowing the same file to be selected multiple consecutive files.",source:"@site/docs/form/upload/file-picker.md",sourceDirName:"form/upload",slug:"/form/upload/file-picker",permalink:"/availity-react/form/upload/file-picker",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/form/upload/file-picker.md",tags:[],version:"current",frontMatter:{title:"<FilePicker />"},sidebar:"someSidebar",previous:{title:"<Upload />",permalink:"/availity-react/form/upload/upload"},next:{title:"<FilePickerBtn />",permalink:"/availity-react/form/upload/file-picker-btn"}},u={},s=[{value:"Example",id:"example",level:3},{value:'Live example: <a href="https://availity.github.io/availity-react/storybook/?path=/story/components-upload--picker-field"> Storybook</a>',id:"live-example--storybook",level:4},{value:"Props",id:"props",level:3},{value:"<code>name: string</code>",id:"name-string",level:4},{value:"<code>tag?: React.ComponentType | string</code>",id:"tag-reactcomponenttype--string",level:4},{value:"<code>onChange?: (event: Event) =&gt; void</code>",id:"onchange-event-event--void",level:4},{value:"<code>multiple?: boolean</code>",id:"multiple-boolean",level:4},{value:"<code>allowedFileTypes?: string[]</code>",id:"allowedfiletypes-string",level:4},{value:"<code>maxSize?: number</code>",id:"maxsize-number",level:4}],m={toc:s};function d(e){var t=e.components,n=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The raw file picker which automatically resets the value of the input, allowing the same file to be selected multiple consecutive files."),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { Form } from '@availity/form';\nimport { FilePicker } from '@availity/form-upload';\nimport { CustomInput } from 'reactstrap';\n\nconst Example = () => {\n  const handleFileSelection = (event) => {\n    const { files } = event.target;\n    // do something with the files.\n  };\n\n  return (\n    <Form initialValues={{ myFile: undefined }}>\n      <FilePicker\n        name=\"myFile\"\n        tag={CustomInput}\n        onChange={this.handleFileSelection}\n      />\n    </Form>\n  );\n};\n")),(0,o.kt)("h4",{id:"live-example--storybook"},"Live example: ",(0,o.kt)("a",{href:"https://availity.github.io/availity-react/storybook/?path=/story/components-upload--picker-field"}," Storybook")),(0,o.kt)("h3",{id:"props"},"Props"),(0,o.kt)("h4",{id:"name-string"},(0,o.kt)("inlineCode",{parentName:"h4"},"name: string")),(0,o.kt)("p",null,"Identifies the field and matches the validation schema."),(0,o.kt)("h4",{id:"tag-reactcomponenttype--string"},(0,o.kt)("inlineCode",{parentName:"h4"},"tag?: React.ComponentType | string")),(0,o.kt)("p",null,"The raw underlying component/element that should be rendered. ",(0,o.kt)("strong",{parentName:"p"},"Default:")," Reactstrap ",(0,o.kt)("inlineCode",{parentName:"p"},"CustomInput"),"."),(0,o.kt)("h4",{id:"onchange-event-event--void"},(0,o.kt)("inlineCode",{parentName:"h4"},"onChange?: (event: Event) => void")),(0,o.kt)("p",null,"Callback when the user has selected a file or multiple files."),(0,o.kt)("h4",{id:"multiple-boolean"},(0,o.kt)("inlineCode",{parentName:"h4"},"multiple?: boolean")),(0,o.kt)("p",null,"Indicates that the user will be allowed to select multiple files when selecting files from the OS prompt."),(0,o.kt)("h4",{id:"allowedfiletypes-string"},(0,o.kt)("inlineCode",{parentName:"h4"},"allowedFileTypes?: string[]")),(0,o.kt)("p",null,"The file types you want to restrict uploading to. eg: ",(0,o.kt)("inlineCode",{parentName:"p"},"['.jpeg', '.jpg']"),"."),(0,o.kt)("h4",{id:"maxsize-number"},(0,o.kt)("inlineCode",{parentName:"h4"},"maxSize?: number")),(0,o.kt)("p",null,"The maximum file size (in bytes) for a file to be uploaded."))}d.isMDXComponent=!0}}]);