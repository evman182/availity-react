"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[2469],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=r.createContext({}),p=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=p(n),h=o,m=c["".concat(d,".").concat(h)]||c[h]||u[h]||i;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=c;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9933:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var r=n(3117),o=n(102),i=(n(7294),n(3905)),a=["components"],s={title:"Authorize",slug:"authorize"},d=void 0,p={unversionedId:"components/authorize/authorize",id:"components/authorize/authorize",title:"Authorize",description:"Component for showing content based on the user's permissions. Wrap this component around content you only want specific users to see.",source:"@site/docs/components/authorize/authorize.mdx",sourceDirName:"components/authorize",slug:"/components/authorize/authorize",permalink:"/availity-react/components/authorize/authorize",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/authorize/authorize.mdx",tags:[],version:"current",frontMatter:{title:"Authorize",slug:"authorize"},sidebar:"someSidebar",previous:{title:"Getting Started",permalink:"/availity-react/components/authorize/"},next:{title:"useAuthorize",permalink:"/availity-react/components/authorize/useAuthorize"}},l={},u=[{value:"Props",id:"props",level:2},{value:"<code>permissions: (string | string[])[]</code>",id:"permissions-string--string",level:3},{value:"<code>resources?: (string | string[])[]</code>",id:"resources-string--string",level:3},{value:"<code>loader?: boolean | ReactNode</code>",id:"loader-boolean--reactnode",level:3},{value:"<code>organizationId?: string</code>",id:"organizationid-string",level:3},{value:"<code>customerId?: string</code>",id:"customerid-string",level:3},{value:"<code>region?: string | boolean</code>",id:"region-string--boolean",level:3},{value:"<code>unauthorized?: ReactNode</code>",id:"unauthorized-reactnode",level:3},{value:"<code>children: ReactNode</code>",id:"children-reactnode",level:3},{value:"<code>negate?: boolean</code>",id:"negate-boolean",level:3},{value:"Example",id:"example",level:2},{value:"Storybook",id:"storybook",level:2}],c={toc:u};function h(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Component for showing content based on the user's permissions. Wrap this component around content you only want specific users to see."),(0,i.kt)("p",null,"This package uses ",(0,i.kt)("a",{parentName:"p",href:"https://react-query.tanstack.com/"},"react-query")," to handle data fetching. This means you must add a ",(0,i.kt)("a",{parentName:"p",href:"https://react-query.tanstack.com/reference/QueryClientProvider#_top"},"QueryClientProvider")," to your app if you do not already have one. The default setup should cover most use-cases. However, there are 2 options we recommend looking into in order to determine what is correct for your app. These settings are ",(0,i.kt)("inlineCode",{parentName:"p"},"refetchOnWindowFocus")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"staleTime"),". The first option sets whether the to refetch the query when the window is focused, and the other is the default marker for how long the query is valid."),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("h3",{id:"permissions-string--string"},(0,i.kt)("inlineCode",{parentName:"h3"},"permissions: (string | string[])[]")),(0,i.kt)("p",null,"Can either be a string, eg: ",(0,i.kt)("inlineCode",{parentName:"p"},'"1234"'),", a number, eg: ",(0,i.kt)("inlineCode",{parentName:"p"},"1234"),", or an array, which can contain permission ID strings/numbers as well as other arrays which contain permission ID strings/numbers, eg: ",(0,i.kt)("inlineCode",{parentName:"p"},"['1234', '2345', ['3456', '4567'], ['5678', '6789']]"),". The items in a nested array indicate permission IDs that must ",(0,i.kt)("em",{parentName:"p"},"all"),' be granted to the user to be considered authorized - they act as "AND". The items in the top of the array act as "OR" - if ',(0,i.kt)("em",{parentName:"p"},"any")," are granted, the user is considered authorized. The example ",(0,i.kt)("inlineCode",{parentName:"p"},"['1234', '2345', ['3456', '4567'], ['5678', '6789']]")," is similar to ",(0,i.kt)("inlineCode",{parentName:"p"},"'1234' OR '2345' OR ('3456' && '4567') OR ('5678' && '6789')"),"."),(0,i.kt)("h3",{id:"resources-string--string"},(0,i.kt)("inlineCode",{parentName:"h3"},"resources?: (string | string[])[]")),(0,i.kt)("p",null,"When present, the permission is validated to ensure it contains the resource(s). Can either be a string, eg: ",(0,i.kt)("inlineCode",{parentName:"p"},'"12345"'),", a number, eg: ",(0,i.kt)("inlineCode",{parentName:"p"},"12345"),", or an array, which can contain resource ID strings/numbers as well as other arrays which contain resource ID strings/numbers, eg: ",(0,i.kt)("inlineCode",{parentName:"p"},"['12345', '23456', ['34567', '45678'], ['56789', '67890']]"),". The items in a nested array indicate resource IDs that must ",(0,i.kt)("em",{parentName:"p"},"all"),' be granted to the user to be considered authorized - they act as "AND". The items in the top of the array act as "OR" - if ',(0,i.kt)("em",{parentName:"p"},"any")," are granted, the user is considered authorized. The example ",(0,i.kt)("inlineCode",{parentName:"p"},"['12345', '23456', ['34567', '45678'], ['56789', '67890']]")," is similar to ",(0,i.kt)("inlineCode",{parentName:"p"},"'12345' OR '23456' OR ('34567' && '45678') OR ('56789' && '67890')"),"."),(0,i.kt)("h3",{id:"loader-boolean--reactnode"},(0,i.kt)("inlineCode",{parentName:"h3"},"loader?: boolean | ReactNode")),(0,i.kt)("p",null,"When ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"BlockUi")," is used when loading the permissions. When a ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),", that node is rendered instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"BlockUi")," when loading the permissions. When ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),", nothing is rendered when loading the permissions. ",(0,i.kt)("strong",{parentName:"p"},"Default:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("h3",{id:"organizationid-string"},(0,i.kt)("inlineCode",{parentName:"h3"},"organizationId?: string")),(0,i.kt)("p",null,"When present, the permission is validated to ensure it is assigned to the organization."),(0,i.kt)("h3",{id:"customerid-string"},(0,i.kt)("inlineCode",{parentName:"h3"},"customerId?: string")),(0,i.kt)("p",null,"When present, the permission is validated to ensure it is assigned to the customer."),(0,i.kt)("h3",{id:"region-string--boolean"},(0,i.kt)("inlineCode",{parentName:"h3"},"region?: string | boolean")),(0,i.kt)("p",null,"When a string, the permission is validated to ensure it is assigned in the provided region. When true, the permission is validated to ensure it is assigned in the current region. ",(0,i.kt)("strong",{parentName:"p"},"Default:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("h3",{id:"unauthorized-reactnode"},(0,i.kt)("inlineCode",{parentName:"h3"},"unauthorized?: ReactNode")),(0,i.kt)("p",null,"The content that renders when the user ",(0,i.kt)("em",{parentName:"p"},"does not")," have the permissions required."),(0,i.kt)("h3",{id:"children-reactnode"},(0,i.kt)("inlineCode",{parentName:"h3"},"children: ReactNode")),(0,i.kt)("p",null,"The content that renders when the user ",(0,i.kt)("em",{parentName:"p"},"does")," have the permissions required."),(0,i.kt)("h3",{id:"negate-boolean"},(0,i.kt)("inlineCode",{parentName:"h3"},"negate?: boolean")),(0,i.kt)("p",null,"Negate the authorization. If the user ",(0,i.kt)("em",{parentName:"p"},"does"),' have the permissions specified, they are considered "unauthorized" (shown the ',(0,i.kt)("inlineCode",{parentName:"p"},"unauthorized")," prop content). If the user ",(0,i.kt)("em",{parentName:"p"},"does not"),' have the permissions specified, they are considered "authorized" (shown the ',(0,i.kt)("inlineCode",{parentName:"p"},"children")," prop content)"),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Authorize from '@availity/authorize';\n\nconst Example = () => (\n  <Authorize permissions={['1234']}>\n    {/* stuff to render if the user is authorized with permission indicated above */}\n  </Authorize>\n);\n")),(0,i.kt)("h2",{id:"storybook"},"Storybook"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://availity.github.io/availity-react/storybook/?path=/story/components-authorize--default"},"Live Example")))}h.isMDXComponent=!0}}]);