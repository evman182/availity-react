"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[9875],{3905:function(t,e,r){r.d(e,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var l=n.createContext({}),p=function(t){var e=n.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},u=function(t){var e=p(t.components);return n.createElement(l.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,l=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),m=p(r),d=o,f=m["".concat(l,".").concat(d)]||m[d]||c[d]||a;return r?n.createElement(f,i(i({ref:e},u),{},{components:r})):n.createElement(f,i({ref:e},u))}));function d(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4246:function(t,e,r){r.r(e),r.d(e,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var n=r(3117),o=r(102),a=(r(7294),r(3905)),i=["components"],s={title:"<ListGroupItemStatus />"},l=void 0,p={unversionedId:"components/list-group-item/list-group-item-status",id:"components/list-group-item/list-group-item-status",title:"<ListGroupItemStatus />",description:"summary: ListGroupItem with an optional status badge and colors for the card and badge.",source:"@site/docs/components/list-group-item/list-group-item-status.md",sourceDirName:"components/list-group-item",slug:"/components/list-group-item/list-group-item-status",permalink:"/availity-react/components/list-group-item/list-group-item-status",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/list-group-item/list-group-item-status.md",tags:[],version:"current",frontMatter:{title:"<ListGroupItemStatus />"},sidebar:"someSidebar",previous:{title:"<ListGroupItem />",permalink:"/availity-react/components/list-group-item/list-group-item"},next:{title:"Page Header",permalink:"/availity-react/components/page-header"}},u={},c=[{value:"Example",id:"example",level:3},{value:'Live example: <a href="https://availity.github.io/availity-react/storybook/?path=/story/components-list-group-item--status"> Storybook</a>',id:"live-example--storybook",level:4},{value:"Props",id:"props",level:3},{value:"<code>titleContent?: ReactNode</code>",id:"titlecontent-reactnode",level:4},{value:"<code>color?: string</code>",id:"color-string",level:4},{value:"<code>badge?: ReactNode</code>",id:"badge-reactnode",level:4}],m={toc:c};function d(t){var e=t.components,r=(0,o.Z)(t,i);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"summary: ListGroupItem with an optional status badge and colors for the card and badge."),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import React from \'react\';\nimport ListGroup from \'@availity/list-group\';\nimport { ListGroupItemStatus } from \'@availity/list-group-item\';\n\nconst Example = () => (\n  <ListGroup cards>\n    <ListGroupItemStatus\n      titleContent="Hello World"\n      badge="Hello World"\n      color="primary"\n    >\n      Some Lorem Ipsum Content\n    </ListGroupItemStatus>\n    <ListGroupItemStatus badge="Item 2" color="danger">\n      Item 2\n    </ListGroupItemStatus>\n    <ListGroupItemStatus color="success">Item 3</ListGroupItemStatus>\n  </ListGroup>\n);\n')),(0,a.kt)("h4",{id:"live-example--storybook"},"Live example: ",(0,a.kt)("a",{href:"https://availity.github.io/availity-react/storybook/?path=/story/components-list-group-item--status"}," Storybook")),(0,a.kt)("h3",{id:"props"},"Props"),(0,a.kt)("h4",{id:"titlecontent-reactnode"},(0,a.kt)("inlineCode",{parentName:"h4"},"titleContent?: ReactNode")),(0,a.kt)("p",null,"When present, adds a title on the same level as the badge. If of type ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," then defaults to using ",(0,a.kt)("inlineCode",{parentName:"p"},"<span>")," tag."),(0,a.kt)("h4",{id:"color-string"},(0,a.kt)("inlineCode",{parentName:"h4"},"color?: string")),(0,a.kt)("p",null,"Set the color for the border and the badge. ",(0,a.kt)("strong",{parentName:"p"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"p"},'"info"'),"."),(0,a.kt)("h4",{id:"badge-reactnode"},(0,a.kt)("inlineCode",{parentName:"h4"},"badge?: ReactNode")),(0,a.kt)("p",null,"If a String, the text to render inside of the ",(0,a.kt)("inlineCode",{parentName:"p"},"<Badge />"),". If an Object, expects ",(0,a.kt)("inlineCode",{parentName:"p"},"text")," (String) and ",(0,a.kt)("inlineCode",{parentName:"p"},"color")," (String) properties. ",(0,a.kt)("inlineCode",{parentName:"p"},"text")," is the text to render inside the badge. ",(0,a.kt)("inlineCode",{parentName:"p"},"color")," is the color of the badge."))}d.isMDXComponent=!0}}]);