"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[5764],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return u}});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),m=c(a),u=o,h=m["".concat(l,".").concat(u)]||m[u]||s[u]||r;return a?n.createElement(h,i(i({ref:t},d),{},{components:a})):n.createElement(h,i({ref:t},d))}));function u(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var c=2;c<r;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1148:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return s}});var n=a(3117),o=a(102),r=(a(7294),a(3905)),i=["components"],p={title:"Page Header"},l=void 0,c={unversionedId:"components/page-header",id:"components/page-header",title:"Page Header",description:"The standard Availity application header that appears at the top of the page. It can include an app icon, payer logo, and/or the feedback loop.",source:"@site/docs/components/page-header.mdx",sourceDirName:"components",slug:"/components/page-header",permalink:"/availity-react/components/page-header",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/page-header.mdx",tags:[],version:"current",frontMatter:{title:"Page Header"},sidebar:"someSidebar",previous:{title:"<ListGroupItemStatus />",permalink:"/availity-react/components/list-group-item/list-group-item-status"},next:{title:"Getting Started",permalink:"/availity-react/components/pagination/"}},d={},s=[{value:"Installation",id:"installation",level:3},{value:"Example",id:"example",level:3},{value:"Live example",id:"live-example",level:4},{value:"Props",id:"props",level:3},{value:"<code>appName: string</code>",id:"appname-string",level:4},{value:"<code>spaceName?: string</code>",id:"spacename-string",level:4},{value:"<code>spaceId?: string</code>",id:"spaceid-string",level:4},{value:"<code>appAbbr?: string</code>",id:"appabbr-string",level:4},{value:"<code>iconColor?: string</code>",id:"iconcolor-string",level:4},{value:"<code>branded?: boolean</code>",id:"branded-boolean",level:4},{value:"<code>payerId?: string</code>",id:"payerid-string",level:4},{value:"<code>logo?: boolean</code>",id:"logo-boolean",level:4},{value:"<code>component?: ReactNode</code>",id:"component-reactnode",level:4},{value:"<code>feedback?: boolean</code>",id:"feedback-boolean",level:4},{value:"<code>feedbackProps?: FeedbackProps</code>",id:"feedbackprops-feedbackprops",level:4},{value:"<code>children?: ReactNode</code>",id:"children-reactnode",level:4},{value:"<code>crumbs?: object[] | ReactNode</code>",id:"crumbs-object--reactnode",level:4},{value:"<code>tag?: React.ComponentType</code>",id:"tag-reactcomponenttype",level:4},{value:"<code>clientId?: string</code>",id:"clientid-string",level:4},{value:"<code>iconSrc?: string</code>",id:"iconsrc-string",level:4},{value:"<code>iconAlt?: string</code>",id:"iconalt-string",level:4},{value:"<code>homeUrl?: string</code>",id:"homeurl-string",level:4},{value:"<code>titleProps?: React.HTMLAttributes&lt;HTMLSpanElement&gt;</code>",id:"titleprops-reacthtmlattributeshtmlspanelement",level:4},{value:"<code>renderRightContent: React.ComponentType&lt;{ payerLogo: ReactNode, feedback: ReactNode, className: string }&gt;</code>",id:"renderrightcontent-reactcomponenttype-payerlogo-reactnode-feedback-reactnode-classname-string-",level:4},{value:"<code>linkTag?: React.ComponentType&lt;React.HTMLAttributes&lt;HTMLAnchorElement&gt;&gt; | string</code>",id:"linktag-reactcomponenttypereacthtmlattributeshtmlanchorelement--string",level:4},{value:"<code>showCrumbs?: bool</code>",id:"showcrumbs-bool",level:4}],m={toc:s};function u(e){var t=e.components,a=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The standard Availity application header that appears at the top of the page. It can include an app icon, payer logo, and/or the feedback loop."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@availity/page-header"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@availity/page-header.svg?style=for-the-badge",alt:"Version"}))),(0,r.kt)("h3",{id:"installation"},"Installation"),(0,r.kt)("p",null,"NPM"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @availity/page-header @availity/api-axios @availity/spaces axios formik yup@^0.32.0\n")),(0,r.kt)("p",null,"Yarn"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @availity/page-header @availity/api-axios @availity/spaces axios formik yup@^0.32.0\n")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import React from \'react\';\nimport PageHeader from \'@availity/page-header\';\n\nconst Example = () => (\n  <PageHeader appName="Payer Space" appAbbr="PS" iconColor="blue" feedback />\n);\n')),(0,r.kt)("h4",{id:"live-example"},"Live example"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://availity.github.io/availity-react/storybook/?path=/docs/components-page-header--default"},"Storybook")),(0,r.kt)("h3",{id:"props"},"Props"),(0,r.kt)("h4",{id:"appname-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"appName: string")),(0,r.kt)("p",null,"Name of the application"),(0,r.kt)("h4",{id:"spacename-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"spaceName?: string")),(0,r.kt)("p",null,"Payer Space Name of the space in which this page is under."),(0,r.kt)("h4",{id:"spaceid-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"spaceId?: string")),(0,r.kt)("p",null,"Payer Space ID of the space in which this page is under."),(0,r.kt)("h4",{id:"appabbr-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"appAbbr?: string")),(0,r.kt)("p",null,"If provided and payerId is not provided, the app icon will appear."),(0,r.kt)("h4",{id:"iconcolor-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"iconColor?: string")),(0,r.kt)("p",null,"Potential values: ",(0,r.kt)("inlineCode",{parentName:"p"},'"black"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"blue"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"green"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"orange"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},'"red"'),". Only used if the app icon should appear. ",(0,r.kt)("strong",{parentName:"p"},"Default:")," ",(0,r.kt)("inlineCode",{parentName:"p"},'"black"'),"."),(0,r.kt)("h4",{id:"branded-boolean"},(0,r.kt)("inlineCode",{parentName:"h4"},"branded?: boolean")),(0,r.kt)("p",null,'Triggers the app icon\'s "branded" styles. Only used if the app icon should appear.'),(0,r.kt)("h4",{id:"payerid-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"payerId?: string")),(0,r.kt)("p",null,"The ID of the payer the application is for. If provided, the payer logo appears and not the app icon."),(0,r.kt)("h4",{id:"logo-boolean"},(0,r.kt)("inlineCode",{parentName:"h4"},"logo?: boolean")),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," will fetch the payer logo using the ",(0,r.kt)("inlineCode",{parentName:"p"},"spaceId")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"payerId"),"."),(0,r.kt)("h4",{id:"component-reactnode"},(0,r.kt)("inlineCode",{parentName:"h4"},"component?: ReactNode")),(0,r.kt)("p",null,"Allow rendering of an optional component in the top right of the header."),(0,r.kt)("h4",{id:"feedback-boolean"},(0,r.kt)("inlineCode",{parentName:"h4"},"feedback?: boolean")),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", the feedback loop button appears."),(0,r.kt)("h4",{id:"feedbackprops-feedbackprops"},(0,r.kt)("inlineCode",{parentName:"h4"},"feedbackProps?: FeedbackProps")),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/components/feedback/feedback/#props"},"Feedback"),". Props to send to ",(0,r.kt)("inlineCode",{parentName:"p"},"<Feedback />")," component"),(0,r.kt)("h4",{id:"children-reactnode"},(0,r.kt)("inlineCode",{parentName:"h4"},"children?: ReactNode")),(0,r.kt)("p",null,"This value appears at the ",(0,r.kt)("inlineCode",{parentName:"p"},"h1")," of the page. Overrides the ",(0,r.kt)("inlineCode",{parentName:"p"},"appName"),' to allow for custom elements (such as a "beta" tag). ',(0,r.kt)("strong",{parentName:"p"},"Default:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"${appName}"),"."),(0,r.kt)("h4",{id:"crumbs-object--reactnode"},(0,r.kt)("inlineCode",{parentName:"h4"},"crumbs?: object[] | ReactNode")),(0,r.kt)("p",null,"Array of Objects containing ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," (String) and ",(0,r.kt)("inlineCode",{parentName:"p"},"url")," (String) properties. The ancestor pages which get passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Breadcrumbs")," component. See ",(0,r.kt)("a",{parentName:"p",href:"/components/breadcrumbs/#crumbs-arrayobject"},"Breadcrumbs")),(0,r.kt)("h4",{id:"tag-reactcomponenttype"},(0,r.kt)("inlineCode",{parentName:"h4"},"tag?: React.ComponentType")),(0,r.kt)("p",null,"The tag to render the page header as. ",(0,r.kt)("strong",{parentName:"p"},"Default:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"<h1>"),"."),(0,r.kt)("h4",{id:"clientid-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"clientId?: string")),(0,r.kt)("p",null,"Client ID to use in ",(0,r.kt)("a",{parentName:"p",href:"/components/spaces/spaces/"},"Spaces")," to fetch the payer's logo"),(0,r.kt)("h4",{id:"iconsrc-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"iconSrc?: string")),(0,r.kt)("p",null,"Image source for ",(0,r.kt)("inlineCode",{parentName:"p"},"<AppIcon />")," to be used instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"appAbbr"),"."),(0,r.kt)("h4",{id:"iconalt-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"iconAlt?: string")),(0,r.kt)("p",null,"Required if ",(0,r.kt)("inlineCode",{parentName:"p"},"iconSrc")," is used. Image alt property of ",(0,r.kt)("inlineCode",{parentName:"p"},"<AppIcon />")),(0,r.kt)("h4",{id:"homeurl-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"homeUrl?: string")),(0,r.kt)("p",null,"Url for the Home route. ",(0,r.kt)("strong",{parentName:"p"},"Default:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"public/apps/dashboard"),"."),(0,r.kt)("h4",{id:"titleprops-reacthtmlattributeshtmlspanelement"},(0,r.kt)("inlineCode",{parentName:"h4"},"titleProps?: React.HTMLAttributes<HTMLSpanElement>")),(0,r.kt)("p",null,"Additional props passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"page-header-title"),"."),(0,r.kt)("h4",{id:"renderrightcontent-reactcomponenttype-payerlogo-reactnode-feedback-reactnode-classname-string-"},(0,r.kt)("inlineCode",{parentName:"h4"},"renderRightContent: React.ComponentType<{ payerLogo: ReactNode, feedback: ReactNode, className: string }>")),(0,r.kt)("p",null,"Used to customize the contents of the right side of the page header where the feedback and payer logo get rendered. Accepts the rendered ",(0,r.kt)("inlineCode",{parentName:"p"},"payerLogo")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"feedback")," as props"),(0,r.kt)("h4",{id:"linktag-reactcomponenttypereacthtmlattributeshtmlanchorelement--string"},(0,r.kt)("inlineCode",{parentName:"h4"},"linkTag?: React.ComponentType<React.HTMLAttributes<HTMLAnchorElement>> | string")),(0,r.kt)("p",null,"Custom link tag for the links. ",(0,r.kt)("strong",{parentName:"p"},"Default:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"<a>")),(0,r.kt)("h4",{id:"showcrumbs-bool"},(0,r.kt)("inlineCode",{parentName:"h4"},"showCrumbs?: bool")),(0,r.kt)("p",null,"Flag whether or not to show the breadcrumbs. ",(0,r.kt)("strong",{parentName:"p"},"Default:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"true")))}u.isMDXComponent=!0}}]);