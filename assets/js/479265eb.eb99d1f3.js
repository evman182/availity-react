"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[1498],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8119:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=["components"],l={title:"<RadioGroup />"},c=void 0,p={unversionedId:"form/components/radio-group",id:"form/components/radio-group",title:"<RadioGroup />",description:"Props",source:"@site/docs/form/components/radio-group.md",sourceDirName:"form/components",slug:"/form/components/radio-group",permalink:"/availity-react/form/components/radio-group",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/form/components/radio-group.md",tags:[],version:"current",frontMatter:{title:"<RadioGroup />"},sidebar:"someSidebar",previous:{title:"<Label />",permalink:"/availity-react/form/components/label"},next:{title:"<Radio />",permalink:"/availity-react/form/components/radio"}},s={},d=[{value:"Props",id:"props",level:3},{value:"<code>name: string</code>",id:"name-string",level:4},{value:"<code>label?: ReactNode</code>",id:"label-reactnode",level:4},{value:"<code>groupClassName?: string</code>",id:"groupclassname-string",level:4},{value:"<code>inline?: boolean</code>",id:"inline-boolean",level:4},{value:"<code>labelClassName?: string</code>",id:"labelclassname-string",level:4},{value:"<code>helpId?: string</code>",id:"helpid-string",level:4},{value:"<code>required?: boolean</code>",id:"required-boolean",level:4}],u={toc:d};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"props"},"Props"),(0,a.kt)("h4",{id:"name-string"},(0,a.kt)("inlineCode",{parentName:"h4"},"name: string")),(0,a.kt)("p",null,"Name of the radio group. Should match name given in ",(0,a.kt)("inlineCode",{parentName:"p"},"initialValues"),"/",(0,a.kt)("inlineCode",{parentName:"p"},"validationSchema"),"."),(0,a.kt)("h4",{id:"label-reactnode"},(0,a.kt)("inlineCode",{parentName:"h4"},"label?: ReactNode")),(0,a.kt)("p",null,"Label for the group or radio buttons."),(0,a.kt)("h4",{id:"groupclassname-string"},(0,a.kt)("inlineCode",{parentName:"h4"},"groupClassName?: string")),(0,a.kt)("p",null,"Class name to apply to the form control."),(0,a.kt)("h4",{id:"inline-boolean"},(0,a.kt)("inlineCode",{parentName:"h4"},"inline?: boolean")),(0,a.kt)("p",null,"Will render the checkbox inline with other checkboxes."),(0,a.kt)("h4",{id:"labelclassname-string"},(0,a.kt)("inlineCode",{parentName:"h4"},"labelClassName?: string")),(0,a.kt)("p",null,"Class name to apply to the Label. Default is Legend styling."),(0,a.kt)("h4",{id:"helpid-string"},(0,a.kt)("inlineCode",{parentName:"h4"},"helpId?: string")),(0,a.kt)("p",null,"Help topic id, adds ",(0,a.kt)("inlineCode",{parentName:"p"},"<FieldHelpIcon/>")," next to the label (should not be within label for accessibility)."),(0,a.kt)("h4",{id:"required-boolean"},(0,a.kt)("inlineCode",{parentName:"h4"},"required?: boolean")),(0,a.kt)("p",null,"Determines if ",(0,a.kt)("inlineCode",{parentName:"p"},"<RequiredAsterisk />")," is added to label."))}m.isMDXComponent=!0}}]);