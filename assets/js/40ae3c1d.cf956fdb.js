"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[8617],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,g=m["".concat(p,".").concat(d)]||m[d]||c[d]||r;return n?a.createElement(g,i(i({ref:t},s),{},{components:n})):a.createElement(g,i({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9070:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var a=n(3117),o=n(102),r=(n(7294),n(3905)),i=["components"],l={title:"<Pagination />",slug:"pagination"},p=void 0,u={unversionedId:"components/pagination/pagination",id:"components/pagination/pagination",title:"<Pagination />",description:"This is the provider component needed for @availity/pagination components to work. All @availity/pagination components must be children of a Pagination provider.",source:"@site/docs/components/pagination/pagination.md",sourceDirName:"components/pagination",slug:"/components/pagination/pagination",permalink:"/availity-react/components/pagination/pagination",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/pagination/pagination.md",tags:[],version:"current",frontMatter:{title:"<Pagination />",slug:"pagination"},sidebar:"someSidebar",previous:{title:"Getting Started",permalink:"/availity-react/components/pagination/"},next:{title:"<PaginationControls />",permalink:"/availity-react/components/pagination/controls"}},s={},c=[{value:"Example",id:"example",level:3},{value:'Live example: <a href="https://availity.github.io/availity-react/storybook/?path=/story/components-pagination--default"> Storybook</a>',id:"live-example--storybook",level:4},{value:"Props",id:"props",level:3},{value:"<code>items? object[] | (currentPage: number, itemsPerPage: number) =&gt; { items: object[], totalCount: number }</code>",id:"items-object--currentpage-number-itemsperpage-number---items-object-totalcount-number-",level:4},{value:"<code>itemsPerPage?: number</code>",id:"itemsperpage-number",level:4},{value:"<code>page?: number</code>",id:"page-number",level:4},{value:"<code>onPageChange?: (page: number) =&gt; void</code>",id:"onpagechange-page-number--void",level:4},{value:"<code>watchList?: any[]</code>",id:"watchlist-any",level:4},{value:"<code>resetParams?: any[]</code>",id:"resetparams-any",level:4},{value:"<code>defaultPage?: number</code>",id:"defaultpage-number",level:4},{value:"<code>debounceTimeout?: number</code>",id:"debouncetimeout-number",level:4},{value:"<code>shouldReturnPrevious?: boolean</code>",id:"shouldreturnprevious-boolean",level:4},{value:"<code>onError?: (error: Error) =&gt; void</code>",id:"onerror-error-error--void",level:4}],m={toc:c};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This is the provider component needed for ",(0,r.kt)("inlineCode",{parentName:"p"},"@availity/pagination")," components to work. All ",(0,r.kt)("inlineCode",{parentName:"p"},"@availity/pagination")," components must be children of a Pagination provider."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport Pagination from '@availity/pagination';\n\nconst Example = () => {\n  const [items, setItems] = useState([]);\n\n  // logic to get items\n\n  return (\n    <Pagination itemsPerPage={25} items={items}>\n      <Pagination.Content component={Component} />\n    </Pagination>\n  );\n};\n")),(0,r.kt)("h4",{id:"live-example--storybook"},"Live example: ",(0,r.kt)("a",{href:"https://availity.github.io/availity-react/storybook/?path=/story/components-pagination--default"}," Storybook")),(0,r.kt)("h3",{id:"props"},"Props"),(0,r.kt)("h4",{id:"items-object--currentpage-number-itemsperpage-number---items-object-totalcount-number-"},(0,r.kt)("inlineCode",{parentName:"h4"},"items? object[] | (currentPage: number, itemsPerPage: number) => { items: object[], totalCount: number }")),(0,r.kt)("p",null,"If Array, defaults ",(0,r.kt)("inlineCode",{parentName:"p"},"totalCount")," to the length of the array, and page values are sliced from the Array. If a function, it is called with the current page as an argument and expects an array of items to be returned."),(0,r.kt)("h4",{id:"itemsperpage-number"},(0,r.kt)("inlineCode",{parentName:"h4"},"itemsPerPage?: number")),(0,r.kt)("p",null,"The total amount of items to render at a time. ( After all the filtering ). ",(0,r.kt)("strong",{parentName:"p"},"Default:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"10"),"."),(0,r.kt)("h4",{id:"page-number"},(0,r.kt)("inlineCode",{parentName:"h4"},"page?: number")),(0,r.kt)("p",null,"Optionally pass your own page in to make the pagination component controlled from props."),(0,r.kt)("h4",{id:"onpagechange-page-number--void"},(0,r.kt)("inlineCode",{parentName:"h4"},"onPageChange?: (page: number) => void")),(0,r.kt)("p",null,"Function to call after the new page has been set when the user changes the page"),(0,r.kt)("h4",{id:"watchlist-any"},(0,r.kt)("inlineCode",{parentName:"h4"},"watchList?: any[]")),(0,r.kt)("p",null,"Array of data points that, when changed, causes the pagination to update. This is helpful when the ",(0,r.kt)("inlineCode",{parentName:"p"},"items")," prop is a function and you want ",(0,r.kt)("inlineCode",{parentName:"p"},"items")," to be called to get the most up-to-date list."),(0,r.kt)("h4",{id:"resetparams-any"},(0,r.kt)("inlineCode",{parentName:"h4"},"resetParams?: any[]")),(0,r.kt)("p",null,"Array of data points that, when changed, causes pagination to reset the current page to 1."),(0,r.kt)("h4",{id:"defaultpage-number"},(0,r.kt)("inlineCode",{parentName:"h4"},"defaultPage?: number")),(0,r.kt)("p",null,"The starting page to use when the component mounts. ",(0,r.kt)("strong",{parentName:"p"},"Default:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,r.kt)("h4",{id:"debouncetimeout-number"},(0,r.kt)("inlineCode",{parentName:"h4"},"debounceTimeout?: number")),(0,r.kt)("p",null,"The amount of time (in milliseconds) to delay fetching page data since the last time page data was fetched (debounced input). Useful for when ",(0,r.kt)("inlineCode",{parentName:"p"},"items")," is a function that's calling an api that you want to relieve pressure on. ",(0,r.kt)("strong",{parentName:"p"},"Default"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"0")),(0,r.kt)("h4",{id:"shouldreturnprevious-boolean"},(0,r.kt)("inlineCode",{parentName:"h4"},"shouldReturnPrevious?: boolean")),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", the previous results are returned. Note: if no results have been fetched thus far, an empty array is returned. Useful for when ",(0,r.kt)("inlineCode",{parentName:"p"},"items")," is a function and new results should not be fetched until certain criteria is met. ",(0,r.kt)("strong",{parentName:"p"},"Default:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("h4",{id:"onerror-error-error--void"},(0,r.kt)("inlineCode",{parentName:"h4"},"onError?: (error: Error) => void")),(0,r.kt)("p",null,"Function to call when an error occurs"))}d.isMDXComponent=!0}}]);