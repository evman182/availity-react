"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[8875],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2320:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=["components"],l={title:"validatePhone",summary:"Availity Phone component using Formik and Yup"},s=void 0,p={unversionedId:"form/phone/components/validate-phone",id:"form/phone/components/validate-phone",title:"validatePhone",description:"Version",source:"@site/docs/form/phone/components/validate-phone.md",sourceDirName:"form/phone/components",slug:"/form/phone/components/validate-phone",permalink:"/availity-react/form/phone/components/validate-phone",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/form/phone/components/validate-phone.md",tags:[],version:"current",frontMatter:{title:"validatePhone",summary:"Availity Phone component using Formik and Yup"},sidebar:"someSidebar",previous:{title:"<Phone />",permalink:"/availity-react/form/phone/components/phone"},next:{title:"Getting Started",permalink:"/availity-react/form/select/"}},c={},u=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"<code>msg?: string</code>",id:"msg-string",level:3},{value:"<code>strict?: boolean</code>",id:"strict-boolean",level:3},{value:"<code>country?: string</code>",id:"country-string",level:3}],m={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@availity/phone"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@availity/phone.svg?style=for-the-badge",alt:"Version"}))),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add\xa0@availity/phone\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"validatePhone")," is a method that can be applied to yup string schemas and is intended to be used with a ",(0,a.kt)("inlineCode",{parentName:"p"},"<Phone />")," component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import * as yup from 'yup';\nimport '@availity/phone/src/validatePhone';\n\nconst laxSchema = yup\n  .string()\n  .validatePhone('This phone number is not possible.');\nconst strictSchema = yup\n  .string()\n  .validatePhone('This phone number is invalid.', true, 'US');\n\nlaxSchema.isValid('222-222-2222'); // true\nstrictSchema.isValid('222-222-2222'); // false\n")),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)("h3",{id:"msg-string"},(0,a.kt)("inlineCode",{parentName:"h3"},"msg?: string")),(0,a.kt)("p",null,"Optional message to display when validation fails."),(0,a.kt)("h3",{id:"strict-boolean"},(0,a.kt)("inlineCode",{parentName:"h3"},"strict?: boolean")),(0,a.kt)("p",null,"Controls whether or not strict phone number validation is used on the component. Defaults to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),". ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/catamphetamine/libphonenumber-js/blob/master/README.md#using-phone-number-validation-feature"},"Benefits of not defaulting to strict validation"),"."),(0,a.kt)("h3",{id:"country-string"},(0,a.kt)("inlineCode",{parentName:"h3"},"country?: string")),(0,a.kt)("p",null,"Default country for parsing national numbers. This is the ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2"},"two letter ISO country code"),". If no code is provided, the default is ",(0,a.kt)("inlineCode",{parentName:"p"},"'US'"),"."))}d.isMDXComponent=!0}}]);