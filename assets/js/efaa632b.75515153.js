"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[6695],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),d=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(r),m=a,f=u["".concat(p,".").concat(m)]||u[m]||s[m]||i;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7671:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return s}});var n=r(3117),a=r(102),i=(r(7294),r(3905)),o=["components"],l={title:"<Wizard />"},p=void 0,d={unversionedId:"components/step-wizard/wizard",id:"components/step-wizard/wizard",title:"<Wizard />",description:"Container for the step wizard.",source:"@site/docs/components/step-wizard/wizard.md",sourceDirName:"components/step-wizard",slug:"/components/step-wizard/wizard",permalink:"/availity-react/components/step-wizard/wizard",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/step-wizard/wizard.md",tags:[],version:"current",frontMatter:{title:"<Wizard />"},sidebar:"someSidebar",previous:{title:"Getting Started",permalink:"/availity-react/components/step-wizard/"},next:{title:"<WizardStep />",permalink:"/availity-react/components/step-wizard/wizard-step"}},c={},s=[{value:"Example",id:"example",level:3},{value:"Live example",id:"live-example",level:4},{value:"Props",id:"props",level:3},{value:"<code>bar?: boolean</code>",id:"bar-boolean",level:4},{value:"<code>stacked?: boolean</code>",id:"stacked-boolean",level:4},{value:"<code>progress?: boolean</code>",id:"progress-boolean",level:4}],u={toc:s};function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Container for the step wizard."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Wizard, {\n  WizardStep,\n  WizardStepBadge,\n  WizardStepTitle,\n} from '@availity/step-wizard';\n\nconst Example = () => (\n  <Wizard bar>\n    <WizardStep complete href=\"#step-1\">\n      <WizardStepBadge>1</WizardStepBadge>\n      <WizardStepTitle>First</WizardStepTitle>\n    </WizardStep>\n\n    <WizardStep href=\"#step-2\">\n      <WizardStepBadge>2</WizardStepBadge>\n      <WizardStepTitle>Second with some long text</WizardStepTitle>\n    </WizardStep>\n  </Wizard>\n);\n")),(0,i.kt)("h4",{id:"live-example"},"Live example"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://availity.github.io/availity-react/storybook/?path=/docs/components-wizard--default"},"Storybook")),(0,i.kt)("h3",{id:"props"},"Props"),(0,i.kt)("h4",{id:"bar-boolean"},(0,i.kt)("inlineCode",{parentName:"h4"},"bar?: boolean")),(0,i.kt)("p",null,'Triggers the "bar" style in the stepwizard.'),(0,i.kt)("h4",{id:"stacked-boolean"},(0,i.kt)("inlineCode",{parentName:"h4"},"stacked?: boolean")),(0,i.kt)("p",null,'Triggers the "stacked" style in the step wizard. If true, wizard steps will display vertically rather than horizontally.'),(0,i.kt)("h4",{id:"progress-boolean"},(0,i.kt)("inlineCode",{parentName:"h4"},"progress?: boolean")),(0,i.kt)("p",null,'Triggers the "progress" style in the step wizard.'))}m.isMDXComponent=!0}}]);