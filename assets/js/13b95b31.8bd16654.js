"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[9734],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1183:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return l}});var r=n(3117),o=n(102),i=(n(7294),n(3905)),a=["components"],s={title:"useProviders"},c=void 0,u={unversionedId:"components/hooks/use-providers",id:"components/hooks/use-providers",title:"useProviders",description:"Hook that returns providers.",source:"@site/docs/components/hooks/use-providers.md",sourceDirName:"components/hooks",slug:"/components/hooks/use-providers",permalink:"/availity-react/components/hooks/use-providers",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/hooks/use-providers.md",tags:[],version:"current",frontMatter:{title:"useProviders"},sidebar:"someSidebar",previous:{title:"useOrganizations",permalink:"/availity-react/components/hooks/use-organizations"},next:{title:"useWindowDimensions",permalink:"/availity-react/components/hooks/use-window-dimensions"}},p={},l=[{value:"Example",id:"example",level:3},{value:"Props",id:"props",level:3},{value:"<code>config: {customerId: number} &amp; AxiosRequestConfig</code>",id:"config-customerid-number--axiosrequestconfig",level:3},{value:"<code>options?: QueryConfig</code>",id:"options-queryconfig",level:3}],d={toc:l};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Hook that returns providers."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { useProviders } from '@availity/hooks';\n\nconst Example = () => {\n  const { data, isFetching } = useProviders({ customerId: 01234 });\n\n  return (\n    <div>\n      {isFetching\n        ? 'Loading...'\n        : data?.data?.providers?.[0]?.lastName || 'Dr. Availity'}\n    </div>\n  );\n};\n")),(0,i.kt)("h3",{id:"props"},"Props"),(0,i.kt)("h3",{id:"config-customerid-number--axiosrequestconfig"},(0,i.kt)("inlineCode",{parentName:"h3"},"config: {customerId: number} & AxiosRequestConfig")),(0,i.kt)("p",null,"The Customer ID to retrieve the providers and other config options that can be passed to ",(0,i.kt)("inlineCode",{parentName:"p"},"getProviders")," from ",(0,i.kt)("inlineCode",{parentName:"p"},"@availity/api-axios")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"More information about this config can be found ",(0,i.kt)("a",{parentName:"p",href:"https://availity.github.io/sdk-js/api/getting-started/#config-1"},"here"))),(0,i.kt)("h3",{id:"options-queryconfig"},(0,i.kt)("inlineCode",{parentName:"h3"},"options?: QueryConfig")),(0,i.kt)("p",null,"Options to be passed to the ",(0,i.kt)("inlineCode",{parentName:"p"},"useQuery")," hook such as ",(0,i.kt)("inlineCode",{parentName:"p"},"enabled"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"retry"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"onSuccess"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"More information on the options can be found ",(0,i.kt)("a",{parentName:"p",href:"https://react-query.tanstack.com/docs/api/#usequery"},"here"))))}m.isMDXComponent=!0}}]);