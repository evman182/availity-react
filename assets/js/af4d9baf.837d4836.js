"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[2441],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=p(n),f=o,d=s["".concat(l,".").concat(f)]||s[f]||m[f]||a;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=s;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},6682:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return m}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=["components"],c={title:"<Feedback />"},l=void 0,p={unversionedId:"form/components/feedback",id:"form/components/feedback",title:"<Feedback />",description:"Error message container for an input",source:"@site/docs/form/components/feedback.md",sourceDirName:"form/components",slug:"/form/components/feedback",permalink:"/availity-react/form/components/feedback",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/form/components/feedback.md",tags:[],version:"current",frontMatter:{title:"<Feedback />"},sidebar:"someSidebar",previous:{title:"<Checkbox />",permalink:"/availity-react/form/components/checkbox"},next:{title:"<Field />",permalink:"/availity-react/form/components/field"}},u={},m=[{value:"Example",id:"example",level:3},{value:"Props",id:"props",level:3},{value:"<code>name: string</code>",id:"name-string",level:4}],s={toc:m};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Error message container for an input"),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { Form, Input, Feedback as FormFeedback } from '@availity/form';\nimport { Button, Label, FormGroup } from 'reactstrap';\n\nconst Example = () => (\n  <Form\n    initialValues={{\n      hello: '',\n    }}\n    onSubmit={() => ({})}\n    validationSchema={yup.object().shape({\n      hello: yup.string().required('Oops'),\n    })}\n  >\n    <FormGroup>\n      <Label>Hello Field</Label>\n      <Input name=\"hello\" feedback=\"true\" />\n      <FormFeedback name=\"hello\" />\n    </FormGroup>\n    <Button type=\"submit\" color=\"primary\">\n      Submit\n    </Button>\n  </Form>\n);\n")),(0,a.kt)("h3",{id:"props"},"Props"),(0,a.kt)("h4",{id:"name-string"},(0,a.kt)("inlineCode",{parentName:"h4"},"name: string")),(0,a.kt)("p",null,"Name used to match the validation schema to the message."))}f.isMDXComponent=!0}}]);