"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[5497],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,y=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(y,i(i({ref:t},l),{},{components:n})):r.createElement(y,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7007:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),i=["components"],s={title:"<SpacesImage />"},p=void 0,c={unversionedId:"components/spaces/images",id:"components/spaces/images",title:"<SpacesImage />",description:"This component must be a descendent of the ` provider. Display an image based on the spaceId or payerId received from the ` provider.",source:"@site/docs/components/spaces/images.md",sourceDirName:"components/spaces",slug:"/components/spaces/images",permalink:"/availity-react/components/spaces/images",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/spaces/images.md",tags:[],version:"current",frontMatter:{title:"<SpacesImage />"},sidebar:"someSidebar",previous:{title:"<Space />",permalink:"/availity-react/components/spaces/space"},next:{title:"<SpacesDisclaimer />",permalink:"/availity-react/components/spaces/disclaimer"}},l={},d=[{value:"Example",id:"example",level:3},{value:'Live example: <a href="https://availity.github.io/availity-react/storybook/?path=/story/components-spaces--images"> Storybook</a>',id:"live-example--storybook",level:4},{value:"Props",id:"props",level:3},{value:"<code>spaceId?: string</code>",id:"spaceid-string",level:4},{value:"<code>payerId?: string</code>",id:"payerid-string",level:4},{value:"<code>skeletonProps?: object</code>",id:"skeletonprops-object",level:4},{value:"<code>fallback?: string</code>",id:"fallback-string",level:4},{value:"<code>imageType?: string</code>",id:"imagetype-string",level:4}],u={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This component must be a descendent of the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Spaces/>")," provider. Display an image based on the spaceId or payerId received from the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Spaces />")," provider."),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import React from \'react\';\nimport Spaces, {\n  SpacesLogo,\n  SpacesBillboard,\n  SpacesTile,\n  SpacesImage,\n} from \'@availity/spaces\';\n\nconst Example = () => (\n  <Spaces\n    spaceIds={[\'73162546201441126239486200007187\']}\n    payerIds={[\'PayerID\']}\n    clientId="my-client-id"\n  >\n    <SpacesLogo spaceId="73162546201441126239486200007187" />\n    <SpacesBillboard payerId="PayerID" />\n    <SpacesTile payerId="PayerID" />\n    <SpacesImage payerId="PayerID" />\n  </Spaces>\n);\n')),(0,o.kt)("h4",{id:"live-example--storybook"},"Live example: ",(0,o.kt)("a",{href:"https://availity.github.io/availity-react/storybook/?path=/story/components-spaces--images"}," Storybook")),(0,o.kt)("h3",{id:"props"},"Props"),(0,o.kt)("h4",{id:"spaceid-string"},(0,o.kt)("inlineCode",{parentName:"h4"},"spaceId?: string")),(0,o.kt)("p",null,"Required if ",(0,o.kt)("inlineCode",{parentName:"p"},"payerId")," is not provided. The payer spaces ID of the payer to render the image for. If no ",(0,o.kt)("inlineCode",{parentName:"p"},"spaceId")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"payerId")," is provided, the first space in the ",(0,o.kt)("inlineCode",{parentName:"p"},"spaces")," array is used. Note: This is only to be used when the Spaces provider should only ever contain a single space."),(0,o.kt)("h4",{id:"payerid-string"},(0,o.kt)("inlineCode",{parentName:"h4"},"payerId?: string")),(0,o.kt)("p",null,"Required if ",(0,o.kt)("inlineCode",{parentName:"p"},"spaceId")," is not provided. The payer ID of the payer to render the image for. If no ",(0,o.kt)("inlineCode",{parentName:"p"},"spaceId")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"payerId")," is provided, the first space in the ",(0,o.kt)("inlineCode",{parentName:"p"},"spaces")," array is used. Note: This is only to be used when the Spaces provider should only ever contain a single space."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: If the payerId is associated with more than one payer space, the order in which they are returned should not be relied upon. If a specific payer space is required, you'll need to filter the list that is returned.")),(0,o.kt)("h4",{id:"skeletonprops-object"},(0,o.kt)("inlineCode",{parentName:"h4"},"skeletonProps?: object")),(0,o.kt)("p",null,"Dimensions passed to loader to show while the image is loading."),(0,o.kt)("h4",{id:"fallback-string"},(0,o.kt)("inlineCode",{parentName:"h4"},"fallback?: string")),(0,o.kt)("p",null,"The fallback image url to render if the url for the spaces image is not valid or not found"),(0,o.kt)("h4",{id:"imagetype-string"},(0,o.kt)("inlineCode",{parentName:"h4"},"imageType?: string")),(0,o.kt)("p",null,"The path on the space containing the image reference. Defaults to: ",(0,o.kt)("inlineCode",{parentName:"p"},'"url"'),"."))}m.isMDXComponent=!0}}]);