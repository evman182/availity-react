"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[7559],{3905:function(e,t,o){o.d(t,{Zo:function(){return p},kt:function(){return m}});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var d=n.createContext({}),c=function(e){var t=n.useContext(d),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},p=function(e){var t=c(e.components);return n.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(o),m=a,b=u["".concat(d,".").concat(m)]||u[m]||s[m]||r;return o?n.createElement(b,i(i({ref:t},p),{},{components:o})):n.createElement(b,i({ref:t},p))}));function m(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,i=new Array(r);i[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<r;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},890:function(e,t,o){o.r(t),o.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var n=o(3117),a=o(102),r=(o(7294),o(3905)),i=["components"],l={title:"<FeedbackForm />"},d=void 0,c={unversionedId:"components/feedback/form",id:"components/feedback/form",title:"<FeedbackForm />",description:"This is the underlying form, which is exposed in case you need to gather feedback inline.",source:"@site/docs/components/feedback/form.md",sourceDirName:"components/feedback",slug:"/components/feedback/form",permalink:"/availity-react/components/feedback/form",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/feedback/form.md",tags:[],version:"current",frontMatter:{title:"<FeedbackForm />"},sidebar:"someSidebar",previous:{title:"<Feedback />",permalink:"/availity-react/components/feedback/feedback"},next:{title:"Help",permalink:"/availity-react/components/help"}},p={},s=[{value:"Example",id:"example",level:3},{value:"Live example: Storybook",id:"live-example-storybook",level:4},{value:"Props",id:"props",level:3},{value:"<code>name?: string</code>",id:"name-string",level:4},{value:"<code>onFeedbackSent?: (feedback: FeedbackObject) =&gt; void</code>",id:"onfeedbacksent-feedback-feedbackobject--void",level:4},{value:"<code>faceOptions?: object[]</code>",id:"faceoptions-object",level:4},{value:"<code>aboutOptions?: object[]</code>",id:"aboutoptions-object",level:4},{value:"<code>aboutLabel?: node</code>",id:"aboutlabel-node",level:4},{value:"<code>onClose?: () =&gt; void</code>",id:"onclose---void",level:4},{value:"<code>prompt?: string</code>",id:"prompt-string",level:4},{value:"<code>additionalComments?: boolean</code>",id:"additionalcomments-boolean",level:4},{value:"<code>staticFields?: object</code>",id:"staticfields-object",level:4},{value:"<code>autoFocusFeedbackButton?: bool</code>",id:"autofocusfeedbackbutton-bool",level:4},{value:"<code>modalHeaderProps?: ModalHeaderProps</code>",id:"modalheaderprops-modalheaderprops",level:4},{value:"<code>...rest</code>",id:"rest",level:4}],u={toc:s};function m(e){var t=e.components,o=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This is the underlying form, which is exposed in case you need to gather feedback inline."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FeedbackForm } from '@availity/feedback';\n\nconst Example = () => <FeedbackForm name=\"Payer Space\" />;\n")),(0,r.kt)("h4",{id:"live-example-storybook"},"Live example: ",(0,r.kt)("a",{parentName:"h4",href:"https://availity.github.io/availity-react/storybook/?path=/story/components-feedback--with-form"},"Storybook")),(0,r.kt)("h3",{id:"props"},"Props"),(0,r.kt)("h4",{id:"name-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"name?: string")),(0,r.kt)("p",null,"The name of the application this feedback is for. It is used in the API request to indicate where the feedback came from."),(0,r.kt)("h4",{id:"onfeedbacksent-feedback-feedbackobject--void"},(0,r.kt)("inlineCode",{parentName:"h4"},"onFeedbackSent?: (feedback: FeedbackObject) => void")),(0,r.kt)("p",null,"Callback for when the feedback is submitted. It is called with the feedback object."),(0,r.kt)("h4",{id:"faceoptions-object"},(0,r.kt)("inlineCode",{parentName:"h4"},"faceOptions?: object[]")),(0,r.kt)("p",null,"Array of Objects containing ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"icon"))," (String), ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"description"))," (String), and ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"label"))," (String) properties. Allows you to override the smiley face options which appear. Default: Smiley Face, Meh Face, and Frowny Face."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Previous ",(0,r.kt)("inlineCode",{parentName:"p"},"placeholder")," property removed as of v6.0.0. Use ",(0,r.kt)("inlineCode",{parentName:"p"},"label")," instead.")),(0,r.kt)("h4",{id:"aboutoptions-object"},(0,r.kt)("inlineCode",{parentName:"h4"},"aboutOptions?: object[]")),(0,r.kt)("p",null,"Array of Objects containing ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"value"))," (String,Number) and ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"label"))," (String) properties. Allows a dropdown displaying the options provided to let the user indicate what the feedback is about."),(0,r.kt)("h4",{id:"aboutlabel-node"},(0,r.kt)("inlineCode",{parentName:"h4"},"aboutLabel?: node")),(0,r.kt)("p",null,"Label text for the dropdown created via the ",(0,r.kt)("inlineCode",{parentName:"p"},"aboutOptions")," prop. ",(0,r.kt)("strong",{parentName:"p"},"Default:")," ",(0,r.kt)("inlineCode",{parentName:"p"},'"This is about"'),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Previously ",(0,r.kt)("inlineCode",{parentName:"p"},"aboutPlaceholder"),". All placeholders replaced with labels starting v6.0.0.")),(0,r.kt)("h4",{id:"onclose---void"},(0,r.kt)("inlineCode",{parentName:"h4"},"onClose?: () => void")),(0,r.kt)("p",null,'When provided, a "Close" button is rendered and ',(0,r.kt)("inlineCode",{parentName:"p"},"onClose")," is excuted when it's clicked."),(0,r.kt)("h4",{id:"prompt-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"prompt?: string")),(0,r.kt)("p",null,"Text that prompts the user to provider feedback. ",(0,r.kt)("strong",{parentName:"p"},"Default:")," ",(0,r.kt)("inlineCode",{parentName:"p"},'"Tell us what you think about ${appName}."'),"."),(0,r.kt)("h4",{id:"additionalcomments-boolean"},(0,r.kt)("inlineCode",{parentName:"h4"},"additionalComments?: boolean")),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", shows an optional comments field below."),(0,r.kt)("h4",{id:"staticfields-object"},(0,r.kt)("inlineCode",{parentName:"h4"},"staticFields?: object")),(0,r.kt)("p",null,"Static (non-user-entered) key/value pairs to be sent in feedback submission."),(0,r.kt)("h4",{id:"autofocusfeedbackbutton-bool"},(0,r.kt)("inlineCode",{parentName:"h4"},"autoFocusFeedbackButton?: bool")),(0,r.kt)("p",null,"Default: ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". When set to false, the first feedback button is not focused. This is to avoid issues with focus causing other elements to close (e.g. dropdowns)"),(0,r.kt)("h4",{id:"modalheaderprops-modalheaderprops"},(0,r.kt)("inlineCode",{parentName:"h4"},"modalHeaderProps?: ModalHeaderProps")),(0,r.kt)("p",null,"Props to be spread onto the ",(0,r.kt)("inlineCode",{parentName:"p"},"<ModalHeader />")," rendered inside of the ",(0,r.kt)("inlineCode",{parentName:"p"},"<FeedbackForm />"),". See ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/reactstrap/reactstrap/blob/master/src/ModalHeader.js"},"ModalHeader")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"For accessibility use ",(0,r.kt)("inlineCode",{parentName:"p"},"className")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"tag")," to adjust size and style of header.")),(0,r.kt)("h4",{id:"rest"},(0,r.kt)("inlineCode",{parentName:"h4"},"...rest")),(0,r.kt)("p",null,"View full set of ",(0,r.kt)("a",{parentName:"p",href:"https://availity.github.io/availity-react/form/components/form/"},"Form Props")))}m.isMDXComponent=!0}}]);