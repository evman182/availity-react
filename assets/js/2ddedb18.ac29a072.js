"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[2822],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),g=c(n),m=r,d=g["".concat(s,".").concat(m)]||g[m]||p[m]||a;return n?o.createElement(d,l(l({ref:t},u),{},{components:n})):o.createElement(d,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},4433:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var o=n(3117),r=n(102),a=(n(7294),n(3905)),l=["components"],i={title:"useToggle"},s=void 0,c={unversionedId:"components/hooks/use-toggle",id:"components/hooks/use-toggle",title:"useToggle",description:"Returns a boolean that can easily be toggled. Useful for loaders, and toggle components.",source:"@site/docs/components/hooks/use-toggle.md",sourceDirName:"components/hooks",slug:"/components/hooks/use-toggle",permalink:"/availity-react/components/hooks/use-toggle",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/hooks/use-toggle.md",tags:[],version:"current",frontMatter:{title:"useToggle"},sidebar:"someSidebar",previous:{title:"useTimeout",permalink:"/availity-react/components/hooks/use-timeout"},next:{title:"usePermissions",permalink:"/availity-react/components/hooks/use-permissions"}},u={},p=[{value:"Example",id:"example",level:3},{value:"Props",id:"props",level:3},{value:"<code>initialState?: boolean</code>",id:"initialstate-boolean",level:4}],g={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Returns a boolean that can easily be toggled. Useful for loaders, and toggle components."),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { useToggle } from '@availity/hooks';\n\nconst Example = () => {\n  const [isToggled, toggle] = useToggle();\n\n  return <div onClick={toggle}>{isToggled ? 'Hello' : 'World'}</div>;\n};\n")),(0,a.kt)("p",null,"You can also pass the state you want to set the toggle to. If it hasn't changed, it will not perform a state update."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { useToggle } from '@availity/hooks';\n\n// This component will never re-render because the toggle is already set to `true`\nconst Example = () => {\n  const [isToggled, toggle] = useToggle(true);\n\n  return (\n    <div onClick={() => toggle(true)}>{isToggled ? 'Hello' : 'World'}</div>\n  );\n};\n")),(0,a.kt)("h3",{id:"props"},"Props"),(0,a.kt)("h4",{id:"initialstate-boolean"},(0,a.kt)("inlineCode",{parentName:"h4"},"initialState?: boolean")),(0,a.kt)("p",null,"The intital state of the toggle. ",(0,a.kt)("strong",{parentName:"p"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"false")))}m.isMDXComponent=!0}}]);