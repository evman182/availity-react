"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[6614],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=l,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8099:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return d}});var a=n(3117),l=n(102),r=(n(7294),n(3905)),i=["components"],o={title:"<SelectField />"},s=void 0,p={unversionedId:"form/select/components/select-field",id:"form/select/components/select-field",title:"<SelectField />",description:"The same as Select but with a Label that appears above the input and a Feedback that appears below the input.",source:"@site/docs/form/select/components/select-field.md",sourceDirName:"form/select/components",slug:"/form/select/components/select-field",permalink:"/availity-react/form/select/components/select-field",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/form/select/components/select-field.md",tags:[],version:"current",frontMatter:{title:"<SelectField />"},sidebar:"someSidebar",previous:{title:"<Select />",permalink:"/availity-react/form/select/components/select"},next:{title:"<ResourceSelect />",permalink:"/availity-react/form/select/components/resource-select"}},c={},d=[{value:"Example",id:"example",level:3},{value:"Live example: Storybook",id:"live-example-storybook",level:4},{value:"Props",id:"props",level:3},{value:"<code>name: string</code>",id:"name-string",level:4},{value:"<code>label?: ReactNode</code>",id:"label-reactnode",level:4},{value:"<code>labelHidden?: boolean</code>",id:"labelhidden-boolean",level:4},{value:"<code>labelClass?: string</code>",id:"labelclass-string",level:4},{value:"<code>helpId?: string</code>",id:"helpid-string",level:4},{value:"<code>helpMessage?: string</code>",id:"helpmessage-string",level:4},{value:"<code>required?: boolean</code>",id:"required-boolean",level:4},{value:"<code>feedbackClass?: string</code>",id:"feedbackclass-string",level:4},{value:"<code>groupClass?: string</code>",id:"groupclass-string",level:4},{value:"508 Compliance",id:"508-compliance",level:3}],u={toc:d};function m(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The same as ",(0,r.kt)("inlineCode",{parentName:"p"},"Select")," but with a ",(0,r.kt)("inlineCode",{parentName:"p"},"Label")," that appears above the input and a ",(0,r.kt)("inlineCode",{parentName:"p"},"Feedback")," that appears below the input."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { Form } from '@availity/form';\nimport { SelectField } from '@availity/select';\nimport { Button } from 'reactstrap';\nimport * as yup from 'yup';\nimport '@availity/yup';\n\nconst Example = () => (\n  <Form\n    initialValues={{\n      justTheInput: undefined,\n    }}\n    onSubmit={(values) => window.alert(JSON.stringify(values))}\n    validationSchema={yup.object().shape({\n      justTheInput: yup.string().required('This field is required.'),\n    })}\n  >\n    <SelectField\n      label=\"Just The Input\"\n      name=\"justTheInput\"\n      isMulti={false}\n      options={[\n        { label: 'Option 1', value: 1 },\n        { label: 'Option 2', value: 2 },\n        { label: 'Option 3', value: 3 },\n      ]}\n    />\n    <Button className=\"mt-3\" color=\"primary\" type=\"submit\">\n      Submit\n    </Button>\n  </Form>\n);\n")),(0,r.kt)("h4",{id:"live-example-storybook"},"Live example: ",(0,r.kt)("a",{parentName:"h4",href:"https://availity.github.io/availity-react/storybook/?path=/story/formik-select--selectfield"},"Storybook")),(0,r.kt)("h3",{id:"props"},"Props"),(0,r.kt)("p",null,"Extends ",(0,r.kt)("a",{parentName:"p",href:"/form/select/components/select/#props"},"Select Props"),"."),(0,r.kt)("h4",{id:"name-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"name: string")),(0,r.kt)("p",null,"The name of the field and name of the HTML Input. Without this, no input will be rendered. Will be the key of the selected option(s) that come through in the values of the ",(0,r.kt)("inlineCode",{parentName:"p"},"onSubmit")," callback of the form."),(0,r.kt)("h4",{id:"label-reactnode"},(0,r.kt)("inlineCode",{parentName:"h4"},"label?: ReactNode")),(0,r.kt)("p",null,"The label to render above the ",(0,r.kt)("inlineCode",{parentName:"p"},"Select")," input."),(0,r.kt)("h4",{id:"labelhidden-boolean"},(0,r.kt)("inlineCode",{parentName:"h4"},"labelHidden?: boolean")),(0,r.kt)("p",null,"Whether the ",(0,r.kt)("inlineCode",{parentName:"p"},"label")," should be hidden."),(0,r.kt)("h4",{id:"labelclass-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"labelClass?: string")),(0,r.kt)("p",null,"Class names to pass to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Label"),"."),(0,r.kt)("h4",{id:"helpid-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"helpId?: string")),(0,r.kt)("p",null,"Help topic id, adds ",(0,r.kt)("inlineCode",{parentName:"p"},"<FieldHelpIcon/>")," next to the label (should not be within label for accessibility)."),(0,r.kt)("h4",{id:"helpmessage-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"helpMessage?: string")),(0,r.kt)("p",null,"Adds help message below input."),(0,r.kt)("h4",{id:"required-boolean"},(0,r.kt)("inlineCode",{parentName:"h4"},"required?: boolean")),(0,r.kt)("p",null,"Will add ",(0,r.kt)("inlineCode",{parentName:"p"},"<RequiredAsterisk />")," to label."),(0,r.kt)("h4",{id:"feedbackclass-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"feedbackClass?: string")),(0,r.kt)("p",null,"Class names to pass to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Feedback"),"."),(0,r.kt)("h4",{id:"groupclass-string"},(0,r.kt)("inlineCode",{parentName:"h4"},"groupClass?: string")),(0,r.kt)("p",null,"Class names to pass to the ",(0,r.kt)("inlineCode",{parentName:"p"},"FormGroup"),"."),(0,r.kt)("h3",{id:"508-compliance"},"508 Compliance"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"<SelectField />")," will automatically associate the ",(0,r.kt)("inlineCode",{parentName:"p"},"FormGroup")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Label")," based on its ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," prop, not an ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," prop. Using an ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," prop that is the same as ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," on this component will result in an orphaned form label and break 508 compliance."))}m.isMDXComponent=!0}}]);