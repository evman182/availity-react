"use strict";(self.webpackChunk_availity_dinosaurdocs=self.webpackChunk_availity_dinosaurdocs||[]).push([[9744],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,f=d["".concat(s,".").concat(u)]||d[u]||m[u]||o;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8414:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return m}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),i=["components"],c={title:"<SpacesAgreement />"},s=void 0,p={unversionedId:"components/spaces/agreement",id:"components/spaces/agreement",title:"<SpacesAgreement />",description:"This component must be a descendent of the ` provider. Display the agreement for a given space id received from the ` provider.",source:"@site/docs/components/spaces/agreement.md",sourceDirName:"components/spaces",slug:"/components/spaces/agreement",permalink:"/availity-react/components/spaces/agreement",draft:!1,editUrl:"https://github.com/availity/availity-react/edit/master/docusaurus/docs/components/spaces/agreement.md",tags:[],version:"current",frontMatter:{title:"<SpacesAgreement />"},sidebar:"someSidebar",previous:{title:"<SpacesDisclaimer />",permalink:"/availity-react/components/spaces/disclaimer"},next:{title:"<SpacesGhostText />",permalink:"/availity-react/components/spaces/ghost-text"}},l={},m=[{value:"Example",id:"example",level:3},{value:'Live example: <a href="https://availity.github.io/availity-react/storybook/?path=/story/components-spaces--agreement"> Storybook</a>',id:"live-example--storybook",level:4},{value:"Props",id:"props",level:3},{value:"<code>spaceId?: string</code>",id:"spaceid-string",level:4},{value:"<code>markdown?: boolean</code>",id:"markdown-boolean",level:4}],d={toc:m};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This component must be a descendent of the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Spaces/>")," provider. Display the agreement for a given space id received from the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Spaces />")," provider."),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Spaces, { SpacesAgreement } from '@availity/spaces';\n\nconst Example = () => (\n  <Spaces\n    spaceIds={['73162546201441126239486200007187']}\n    clientId=\"my-client-id\"\n  >\n    <SpacesAgreement markdown />\n  </Spaces>\n);\n")),(0,o.kt)("h4",{id:"live-example--storybook"},"Live example: ",(0,o.kt)("a",{href:"https://availity.github.io/availity-react/storybook/?path=/story/components-spaces--agreement"}," Storybook")),(0,o.kt)("h3",{id:"props"},"Props"),(0,o.kt)("h4",{id:"spaceid-string"},(0,o.kt)("inlineCode",{parentName:"h4"},"spaceId?: string")),(0,o.kt)("p",null,"The id of the space to render the agreement for. If no ",(0,o.kt)("inlineCode",{parentName:"p"},"spaceId")," is provided, the first space in the ",(0,o.kt)("inlineCode",{parentName:"p"},"spaces")," array is used. Note: This is only to be used when the Spaces provider should only ever contain a single space."),(0,o.kt)("h4",{id:"markdown-boolean"},(0,o.kt)("inlineCode",{parentName:"h4"},"markdown?: boolean")),(0,o.kt)("p",null,"Render the agreement as markdown."))}u.isMDXComponent=!0}}]);